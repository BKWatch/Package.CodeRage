<?xml version="1.0" encoding="UTF-8"?>
<!--
  //////////////////////////////////////////////////////////////////////////////
  //
  // XML Schema for database schema and database connection configurations
  //
  // File:        CodeRage/Db/Schema/dataSource.xsd
  // Date:        Thu, 26 Apr 07 20:53:18 -0400
  // Notice:      This document contains confidential information and
  //              trade secrets
  //
  // Copyright:   2015 CounselNow, LLC
  // Author:      Jonathan Turkanis
  // License:     All rights reserved
  //
  //////////////////////////////////////////////////////////////////////////////
  -->
<schema targetNamespace="http://www.coderage.com/2008/project"
  xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:db="http://www.coderage.com/2008/project"
  xmlns:po="http://www.coderage.com/2007/polonium"
  elementFormDefault="qualified">

  <annotation>
    <documentation>
      Contains the definition of the elements "dataSource", "database"
      and "connectionParams", in the namespace
      "http://www.coderage.com/2007/config",
      for describinding database schemas and connection information
    </documentation>
  </annotation>

  <import namespace="http://www.coderage.com/2007/polonium"
          schemaLocation="types.xsd">
    <annotation>
      <documentation>
        Contains the definition of the simple type 'version'
      </documentation>
    </annotation>
  </import>

  <!-- Type definitions -->

  <simpleType name="identifier">
    <annotation>
      <documentation>
        Represent a programming language identifier
      </documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="[_a-zA-Z][_a-zA-Z0-9]*"/>
    </restriction>
  </simpleType>

  <simpleType name="identifierList">
    <annotation>
      <documentation>
        Represent a space-separated list of identifiers
      </documentation>
    </annotation>
    <list itemType="db:identifier"/>
  </simpleType>

  <simpleType name="datatype">
    <annotation>
      <documentation>
        A column type, represented in a DBMS-independent manner;
        the classes and functions in the CodeRage_Db_Schema package
        are free to map DMBS-independent data type descriptions
        to native data types in the manner most appropriate for
        a particular DBMS.

        A column with data type "autoincrement" should be given
        a large integer type whose value is assigned automatically
        by the DBMS when a record is inserted. If a DBMS does not
        support auto-incremented columns, the column should be
        given a large integer type and a sequence should be
        created to supply values to be inserted into the column
      </documentation>
    </annotation>
    <restriction base="xsd:string">
     <pattern value="boolean|int\([0-9]+\)|decimal|float|char\([0-9]+\)|varchar\([0-9]+\)|date|time|datetime|blob|clob|autoincrement|integer|smallint|bigint"/>
    </restriction>
  </simpleType>

  <complexType name="tableList">
    <annotation>
      <documentation>
        Base type for the "database" and "tables" elements;
        represents a collection of table descriptions
      </documentation>
    </annotation>
    <sequence>
      <element name="description" type="xsd:string" minOccurs="0">
        <annotation>
          <documentation>
            A detailed description of the purpose and structure of
            this database or collection of tables
          </documentation>
        </annotation>
      </element>
      <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
      <element name="commonColumns" minOccurs="0">
        <annotation>
          <documentation>
            A list of columns which should be added to all the tables
            in this list
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element ref="db:column" maxOccurs="unbounded"/>
          </sequence>
        </complexType>
        <unique name="uniqueCommonColumn">
          <selector xpath="child::db:column"></selector>
          <field xpath="@name"></field>
        </unique>
      </element>
      <choice minOccurs="0" maxOccurs="unbounded">
        <element ref="db:table"/>
        <element ref="db:record"/>
        <element ref="db:constant"/>
        <element name="include">
          <complexType>
            <attribute name="src" type="xsd:anyURI">
              <annotation>
                <documentation>
                  The file pathname of an XML document conforming to this
                  schema and having "tables" as a top-level element. The
                  value of this attribute should be resolved relative to
                  the location of the containing document. Options and
                  common tables in a document containing an "include"
                  element do not apply to the included document
                </documentation>
              </annotation>
            </attribute>
          </complexType>
        </element>
      </choice>
    </sequence>
    <attributeGroup ref="db:version"/>
  </complexType>

  <!-- Attribute definitions -->

  <attributeGroup name="version">
    <attribute name="version" type="xsd:string" use="optional">
      <annotation>
        <documentation>
          The version of the Db_Schema package to which the data source
          definition conforms
        </documentation>
      </annotation>
    </attribute>
  </attributeGroup>

  <!-- Element definitions -->

  <element name="dataSource">
    <annotation>
      <documentation>
        Describes a method of connecting to a database, coupled with
        a database schema
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref="db:connectionParams"/>
        <element ref="db:database"/>
      </sequence>
      <attribute name="name" type="db:identifier" use="required">
        <annotation>
          <documentation>
            The name of this data source, as it will appear in forms
            and source code.
          </documentation>
        </annotation>
      </attribute>
      <attributeGroup ref="db:version"/>
    </complexType>
  </element>

  <element name="connectionParams">
    <annotation>
      <documentation>
        Represents the information required to establish a database
        connection. Each of the properties dbms, host, port, username,
        and password may contain embedded SGL expressions.
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="dbms" type="xsd:string">
          <annotation>
            <documentation>
              An identifier representing the database backend;
              currently, "mssql" and "mysql" are supported
            </documentation>
          </annotation>
        </element>
        <element name="host" type="xsd:string"/>
        <element name="port" type="xsd:short" minOccurs="0"/>
        <element name="username" type="xsd:string"/>
        <element name="password" type="xsd:string"/>
        <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </complexType>
  </element>

  <element name="database">
    <annotation>
      <documentation>
        Describes a database schema, in a DBMS-independent manner.
        If the "src" attribute is supplied, there must be no other attributes
        or child elements; otherwise, the "name" attribute and the
        "description" child element are required, as well as at least one
        "table" or "include" child element.
      </documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="db:tableList">
          <attribute name="name" type="xsd:string">
            <annotation>
              <documentation>
                The simple name of this database, as used by the DBMS
              </documentation>
            </annotation>
          </attribute>
          <attribute name="src" type="xsd:anyURI">
            <annotation>
              <documentation>
                The file pathname of an XML document conforming to this
                schema and having "database" as a top-level element. The
                value of this attribute should be resolved relative to
                the location of the containing document
              </documentation>
            </annotation>
          </attribute>
        </extension>
      </complexContent>
    </complexType>
    <unique name="uniqueDatabaseTable">
      <selector xpath="db:table"></selector>
      <field xpath="@name"></field>
    </unique>
    <unique name="uniqueDatabaseConstant">
      <selector xpath="db:constant"></selector>
      <field xpath="@name"></field>
    </unique>
  </element>

  <element name="tables" type="db:tableList">
    <annotation>
      <documentation>
        A container for database tables that allows table
        descriptions to be shared between database schemas. The
        "description" child element is required
      </documentation>
    </annotation>
    <unique name="uniqueTableListTable">
      <selector xpath="child::db:table"></selector>
      <field xpath="@name"></field>
    </unique>
    <unique name="uniqueTableListConstant">
      <selector xpath="db:constant"></selector>
      <field xpath="@name"></field>
    </unique>
  </element>

  <element name="table">
    <annotation>
      <documentation>
        Represents a database table
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="description" type="xsd:string">
          <annotation>
            <documentation>
              A detailed description of the purpose and structure of
              this database table
            </documentation>
          </annotation>
        </element>
        <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:column" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:primaryKey" minOccurs="0"/>
        <element ref="db:foreignKey" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:unique" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:index" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:fullTextIndex" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="db:invariant" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute name="name" type="db:identifier" use="required">
        <annotation>
          <documentation>
            The simple name of this database table, as used by the DBMS
          </documentation>
        </annotation>
      </attribute>
    </complexType>
    <unique name="uniqueTableColumn">
      <selector xpath="child::db:column"></selector>
      <field xpath="@name"></field>
    </unique>
  </element>

  <element name="column">
    <annotation>
      <documentation>
        Represents a column in a database table
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="description" type="xsd:string">
          <annotation>
            <documentation>
              A detailed description of the purpose of this column
            </documentation>
          </annotation>
        </element>
        <element ref="db:invariant" minOccurs="0" maxOccurs="unbounded">
          <annotation>
            <documentation>
              Informally, an invariant refering to this column. Technically,
              supplying an invariant as a child element of a column is the
              same as supplying it as a child of the containing table;
              the invariant need not contain a path binding refering to the
              column
            </documentation>
          </annotation>
        </element>
      </sequence>
      <attribute name="name" type="db:identifier" use="required">
        <annotation>
          <documentation>
            The name of this column, as used by the DBMS
          </documentation>
        </annotation>
      </attribute>
      <attribute name="type" type="db:datatype" use="required">
        <annotation>
          <documentation>
            The data type of this column
          </documentation>
        </annotation>
      </attribute>
      <attribute name="nullable" type="xsd:boolean" default="true">
        <annotation>
          <documentation>
            True if this column admits null values
          </documentation>
        </annotation>
      </attribute>
      <attribute name="primaryKey" type="xsd:boolean" default="false">
        <annotation>
          <documentation>
            True if this column is a primary key for the containing table.
            Specifying a value of "true" for this attribute has the same
            effect as supplying a sibling "primaryKey" element with a
            "columns" attribute equal to the name of this column
          </documentation>
        </annotation>
      </attribute>
      <attribute name="unique" type="xsd:boolean" default="false">
        <annotation>
          <documentation>
            True if the containing table has a uniqueness constraint
            referencing this column alone.
            Specifying a value of "true" for this attribute has the same
            effect as supplying a sibling "unique" element with a
            "columns" attribute equal to the name of this column
          </documentation>
        </annotation>
      </attribute>
      <attribute name="default" type="xsd:string">
        <annotation>
          <documentation>
            Specifies a default value for a column
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="primaryKey">
    <annotation>
      <documentation>
        Represents primary key constraint
      </documentation>
    </annotation>
    <complexType>
      <attribute name="columns" type="db:identifierList" use="required">
        <annotation>
          <documentation>
            The subset of columns that together constitute the
            containing table's primary key
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="foreignKey">
    <annotation>
      <documentation>
        Represents primary key constraint
      </documentation>
    </annotation>
    <complexType>
      <attribute name="columns" type="db:identifierList" use="required">
        <annotation>
          <documentation>
            A subset of the columns of the containing table
          </documentation>
        </annotation>
      </attribute>
      <attribute name="refTable" type="db:identifierList" use="required">
        <annotation>
          <documentation>
            The foreign table referenced by this constraint
          </documentation>
        </annotation>
      </attribute>
      <attribute name="refColumns" type="db:identifierList" use="required">
        <annotation>
          <documentation>
            The subset of the referenced table's columns to
            which the columns in the "columns" attribute are
            mapped by this constraint
          </documentation>
        </annotation>
      </attribute>
      <attribute name="cascadeOnDelete" type="xsd:boolean" default="false">
        <annotation>
          <documentation>
            Indicates that when a referenced record is deleted, the
            referencing record should be deleted automatically
            by the DBMS
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="unique">
    <annotation>
      <documentation>
        Represents a uniqueness constraint
      </documentation>
    </annotation>
    <complexType>
      <attribute name="columns" type="db:identifierList" use="required">
        <annotation>
          <documentation>
            The subset of the containing table's columns to
            which this uniqueness constraint applies
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="index">
    <annotation>
      <documentation>
        Represents a database index
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
        <element name="column" maxOccurs="unbounded">
          <annotation>
            <documentation>
              Represents a column to be indexed
            </documentation>
          </annotation>
          <complexType>
            <attribute name="name" type="db:identifier" use="required">
              <annotation>
                <documentation>
                  The name of one of the containing table's columns
                </documentation>
              </annotation>
            </attribute>
            <attribute name="order" default="ascending">
              <annotation>
                <documentation>
                  Indicates the order in which index values are stored.
                </documentation>
              </annotation>
              <simpleType>
                <restriction base="xsd:string">
                  <enumeration value="ascending"/>
                  <enumeration value="descending"/>
                </restriction>
              </simpleType>
            </attribute>
          </complexType>
        </element>
      </sequence>
    </complexType>
    <unique name="uniqueIndexColumn">
      <selector xpath="child::db:column"></selector>
      <field xpath="@name"></field>
    </unique>
  </element>

  <element name="fullTextIndex">
    <annotation>
      <documentation>
        Represents a full-text index
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="column" maxOccurs="unbounded">
          <annotation>
            <documentation>
              Represents a column to be indexed
            </documentation>
          </annotation>
          <complexType>
            <sequence>
              <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
            <attribute name="name" type="db:identifier" use="required">
              <annotation>
                <documentation>
                  The name of one of the containing table's columns
                </documentation>
              </annotation>
            </attribute>
          </complexType>
        </element>
        <element ref="db:option" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </complexType>
    <unique name="uniqueFullTextIndexColumn">
      <selector xpath="child::db:column"></selector>
      <field xpath="@name"></field>
    </unique>
  </element>

  <element name="invariant">
    <annotation>
      <documentation>
        A Segul expression referencing one or more of the containing table's columns,
        together with an error message to display to the user if an insert or update
        cannot be performed because the condition is not satisfied
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="message" type="xsd:string"/>
      </sequence>
      <attribute name="value" type="xsd:string" use="required">
        <annotation>
          <documentation>
            A Segul expression containg only the following two types of databindings:
            (i) path bindings containing only child steps, and
            (ii) config bindings

            Path bindings consisting of a single child step, e.g., {first_name},
            refer to the value of the column having the same name as the child step.
            Path bindings containing several steps are interpretted by
            following foreign-key relationships; e.g., {attorney/firm/address} might
            refer to the "address" column of the record in the "LawFirm" table
            referenced by the "firm" column of a record in the "Attorney" table
            referenced by the "attorney" column of a record in the "Client" table
          </documentation>
        </annotation>
      </attribute>
      <attribute name="enforce" default="both">
        <annotation>
          <documentation>
            Indicates whether the invariant should be enforced at the
            application level, the database level, or both
          </documentation>
        </annotation>
        <simpleType>
          <restriction base="xsd:string">
            <enumeration value="application"/>
            <enumeration value="database"/>
            <enumeration value="both"/>
          </restriction>
        </simpleType>
      </attribute>
    </complexType>
  </element>

  <element name="option">
    <annotation>
      <documentation>
        Represents a name/value pair whose interpretation
        depends on the DBMS
      </documentation>
    </annotation>
    <complexType mixed="true">
      <attribute name="name" type="xsd:string" use="required"/>
      <attribute name="dbms" type="db:identifierList">
        <annotation>
          <documentation>
            A list of the DBMS's to which this option should be applied; if not
            supplied, this option applies to all DBMS's
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="record">
    <annotation>
      <documentation>
        Represents a row of data in a database table. The absence
        of a specified value for a column indicates that the default
        value for that column should be used, or NULL if the column does
        not have a default value.

        If values are specified for columns of type "autoincrement",
        the automatic column value generation should be disabled before
        inserting the data and later enabled
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="description" type="xsd:string" minOccurs="0">
          <annotation>
            <documentation>
              A detailed description of the purpose of this record
            </documentation>
          </annotation>
        </element>
        <element name="column" minOccurs="0" maxOccurs="unbounded">
          <annotation>
            <documentation>
              Represents the contained in a single column
            </documentation>
          </annotation>
          <complexType>
            <attribute name="name" type="db:identifier" use="required">
              <annotation>
                <documentation>
                  The column name
                </documentation>
              </annotation>
            </attribute>
            <attribute name="value" type="xsd:string">
              <annotation>
                <documentation>
                  The column value; the absense of this attribute represents a null value
                </documentation>
              </annotation>
            </attribute>
          </complexType>
        </element>
      </sequence>
      <attribute name="table" type="db:identifier">
        <annotation>
          <documentation>
            The name of the database table containing the row of data
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <element name="constant">
    <annotation>
      <documentation>
        represents a named integral constant
      </documentation>
    </annotation>
    <complexType>
      <sequence>
        <element name="description" type="xsd:string" minOccurs="0">
          <annotation>
            <documentation>
              A detailed description of the purpose of this constant
            </documentation>
          </annotation>
        </element>
      </sequence>
      <attribute name="name" type="db:identifier" use="required">
        <annotation>
          <documentation>
            The constant name
          </documentation>
        </annotation>
      </attribute>
      <attribute name="value" type="xsd:long" use="required">
        <annotation>
          <documentation>
            The constant value
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

</schema>
